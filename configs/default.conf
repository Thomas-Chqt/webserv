error_log webserv.log;

http {
    server {
        listen 8100;
        server_name                localhost;
        upload_path                www/uploads/;
        accepted_cgi_extension .py /usr/bin/python;

        location / {
            root           www/html;
            index          index.html;
            error_page 403 /error/403.html;
            error_page 404 /error/404.html;
        }

        location /favicon.ico {
            root www/img;
        }

        location /img {
            root www;
            autoindex on;
        }

        location /cgi-bin {
            root                   www;
            accepted_cgi_extension .pl /usr/bin/perl;
            accepted_cgi_extension .php;
            autoindex              on;
            error_page 500 /error/500.html;
        }

        location /uploads {
            root www;
            autoindex on;
            client_max_body_size 500;
            accepted_methods POST GET DELETE PUT;
        }

        location /alias {
            alias src/HTTP/;
            index HTTPBase.hpp;
            autoindex on;
        }

        location /redirect-google {
            redirect https://www.google.com;
        }

        location /redirect-self1 {
            redirect /redirect-self2;
        }

        location /redirect-self2 {
            redirect /redirect-self1;
        }
    }

    server {
        listen 8100;
        server_name emuserv;

        location / {
            root     www/html;
            index    emu.html;
        }
    }

    server {
        listen 8200;
        server_name thoserv;

        location / {
            root     www/html;
            index    tho.html;
        }
    }
}

# Our configuration file is set up to resemble nginx. 
# However, there are some differences from nginx configuration files.
# 1. The names of directives may be different from nginx.
# 2. The arguments allowed for directives may be different from nginx.
# 3. The types of directives are clearly fewer than nginx, but it is still possible to create a basic server.

# block directives #
## http ##
 # Context: main
## server ##
 # Context: http
## location ##
    # Context: server
    # Default: -

# simple directives #
## error_log ##
 # Context: main
 # Default: log/webserv.log

## listen ##
 # Context: server
 # Default: 8042
 # Different from nginx: When specifying multiple port numbers, multiple listen directives should be written

## server_name ##
 # Context: server
 # Default: localhost
 # Different from nginx: When specifying multiple server names, multiple server_name directives should be written

## upload_path ##
 # Context: server
 # Default: www/uploads/
 # Different from nginx: This directive specifies the path to the directory where uploaded files by client can stored.

## root ##
 # Context: server, location
 # Default: www/html

## index ##
 # Context: server, location
 # Default: index.html

## error_page ##
 # Context: server, location
 # Default: -

## autoindex ##
 # Context: server, location
 # Default: off
 # Different from nginx: There are "DELETE" bottun in the autoindex page.

## client_max_body_size ##
 # Context: server, location
 # Default: 1000000

## redirect ##
 # Context: server, location
 # Default: -
 # Different from nginx: nginx's name is 'return'. And, you can't define the status code of the redirect.

## accepted_cgi_extension ##
 # Context: server, location
 # Default: .py .pl .php
 # That directive composed by key and value.
 # The key is the extension of the CGI script, and the value is the path to the interpreter.
 # If the value is not specified, server excutes the script as a shell script.So, the value should be specified with shebang.
 # e.g. accepted_cgi_extension .py /usr/bin/python;

## accepted_methods ##
 # Context: location
 # Default: -
 # List of accepted HTTP methods for the location.
 # e.g. accepted_methods POST GET DELETE;

## alias ##
 # Context: location
 # Default: -
